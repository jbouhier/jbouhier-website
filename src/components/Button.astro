---
interface Props {
  href?: string
  variant?: 'primary' | 'secondary' | 'outline' | 'ghost' | 'link'
  size?: 'sm' | 'md' | 'lg'
  fullWidth?: boolean
  className?: string
  class?: string
  target?: string
  rel?: string
  [key: string]: any // Allow additional props
}

const {
  href,
  variant = 'primary',
  size = 'md',
  fullWidth = false,
  className = '',
  class: classProp = '',
  target,
  rel,
  ...attrs
} = Astro.props

const baseClasses =
  'inline-flex items-center justify-center rounded-lg font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 disabled:pointer-events-none'

const variants = {
  primary:
    'bg-primary-600 text-white hover:bg-primary-700 focus:ring-primary-500',
  secondary:
    'bg-gray-800 text-white hover:bg-gray-900 focus:ring-gray-500 dark:bg-gray-100 dark:text-gray-900 dark:hover:bg-white',
  outline:
    'border border-gray-300 dark:border-gray-700 bg-transparent hover:bg-gray-50 dark:hover:bg-gray-800 focus:ring-gray-500',
  ghost: 'hover:bg-gray-100 dark:hover:bg-gray-800 focus:ring-gray-500',
  link: 'hover:underline underline-offset-4 focus:ring-0 p-0 h-auto',
}

const sizes = {
  sm: 'px-3 py-1.5 text-sm',
  md: 'px-4 py-2 text-base',
  lg: 'px-6 py-3 text-lg',
}

const classes = [
  baseClasses,
  variants[variant],
  sizes[size],
  fullWidth ? 'w-full' : '',
  className,
  classProp,
]
  .filter(Boolean)
  .join(' ')
---

{href ? (
  <a 
    href={href} 
    class={classes}
    target={target}
    rel={rel}
    {...attrs}
  >
    <slot />
  </a>
) : (
  <button 
    class={classes}
    {...attrs}
  >
    <slot />
  </button>
)}
